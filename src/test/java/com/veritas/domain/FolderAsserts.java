package com.veritas.domain;

import static com.veritas.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class FolderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFolderAllPropertiesEquals(Folder expected, Folder actual) {
        assertFolderAutoGeneratedPropertiesEquals(expected, actual);
        assertFolderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFolderAllUpdatablePropertiesEquals(Folder expected, Folder actual) {
        assertFolderUpdatableFieldsEquals(expected, actual);
        assertFolderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFolderAutoGeneratedPropertiesEquals(Folder expected, Folder actual) {
        assertThat(expected)
            .as("Verify Folder auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFolderUpdatableFieldsEquals(Folder expected, Folder actual) {
        assertThat(expected)
            .as("Verify Folder relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getParentFolderId()).as("check parentFolderId").isEqualTo(actual.getParentFolderId()))
            .satisfies(
                e ->
                    assertThat(e.getCreatedAt())
                        .as("check createdAt")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getCreatedAt())
            )
            .satisfies(
                e ->
                    assertThat(e.getUpdatedAt())
                        .as("check updatedAt")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getUpdatedAt())
            )
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFolderUpdatableRelationshipsEquals(Folder expected, Folder actual) {
        assertThat(expected)
            .as("Verify Folder relationships")
            .satisfies(e -> assertThat(e.getFile()).as("check file").isEqualTo(actual.getFile()))
            .satisfies(e -> assertThat(e.getFiles()).as("check files").isEqualTo(actual.getFiles()));
    }
}
